{"version":3,"sources":["components/FIrebaseUtility/Firebase.ts","store/StoreProvider.tsx","components/Header/Header.tsx","components/Navigation/Navigation.tsx","components/contentForm/ContentForm.tsx","components/Modal/Modal.tsx","components/expenses/subcomponent/EditMode/EditMode.tsx","components/expenses/subcomponent/ExpenseList/ExpenseList.tsx","components/expenses/Expenses.tsx","components/content/Content.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["process","firebaseConfig","apiKey","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATABASE_URL","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","database","initializeApp","getDatabase","StoreContex","createContext","StoreProvider","children","useState","list","setList","user","setUser","infoShow","setInfoShow","Provider","value","Header","useContext","provider","GoogleAuthProvider","auth","getAuth","languageCode","handleSignIn","signInWithPopup","then","result","catch","error","console","warn","handleSignOut","signOut","useEffect","listOfExpenses","ref","onValue","snapshot","val","className","onClick","Boolean","Navigation","to","ContentForm","Number","price","setPrice","productName","setProductName","buyDate","setBuyDate","carBrand","setCarBrand","id","nanoid","resetFormValues","method","onSubmit","e","preventDefault","set","uid","date","createDate","Date","toUTCString","sendData","onChange","event","target","type","placeholder","required","String","lang","name","log","Modal","isOpen","handleOnClose","shouldBeCloseOnOutsideClick","modalRef","useRef","previousActiveElement","current","modal","document","activeElement","showModal","close","focus","handleCancel","addEventListener","removeEventListener","ReactDOM","createPortal","body","EditMode","isOpenPopup","hidePopup","priceFromExpensesList","dateFromExpensesList","carBrandFromExpensesList","productNameFromExpensesList","createDateFromExpensesList","keyObjectArrayInEditMode","property","push","showText","setShowText","map","key","editDate","ExpenseList","setIsOpenPopup","keyObjectArrayInExpenses","deleteToDoObject","remove","Expenses","sort","setSort","keyObjectArrayEntires","Object","entries","sortedArray","forEach","element","toLowerCase","expenseListElement","a","b","el","spendMoney","toFixed","calculatedExpenses","disabled","undefined","Content","exact","path","render","from","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d3f4c1b4.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\"\r\nimport { getDatabase } from \"firebase/database\"\r\n\r\nconst { REACT_APP_API_KEY, REACT_APP_AUTH_DOMAIN, REACT_APP_DATABASE_URL, REACT_APP_PROJECT_ID, REACT_APP_STORAGE_BUCKET, REACT_APP_MESSAGING_SENDER_ID, REACT_APP_APP_ID } = process.env\r\n\r\nconst firebaseConfig = {\r\n  apiKey: REACT_APP_API_KEY,\r\n  authDomain: REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: REACT_APP_DATABASE_URL,\r\n  projectId: REACT_APP_PROJECT_ID,\r\n  storageBucket: REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: REACT_APP_APP_ID\r\n};\r\n\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\nexport const database = getDatabase();\r\nexport default firebaseApp;","import { useState, createContext } from 'react';\r\n\r\nimport { childrenType } from '../Types/Types';\r\n\r\nexport const StoreContex = createContext<null | any>(null)\r\n\r\n\r\n\r\nconst StoreProvider = <T,>({ children }: childrenType<T>) => {\r\n\r\n\r\n    const [list, setList] = useState<string>()\r\n    const [user, setUser] = useState<object>()\r\n    const [infoShow, setInfoShow] = useState<boolean>(false);\r\n\r\n    return (\r\n        <StoreContex.Provider value={{ list, setList, user, setUser, infoShow, setInfoShow }}>\r\n            {children}\r\n        </StoreContex.Provider>\r\n    )\r\n}\r\n\r\nexport default StoreProvider;","import './Header.scss'\r\n\r\nimport { GoogleAuthProvider, getAuth, signInWithPopup, signOut } from 'firebase/auth';\r\n\r\nimport { onValue, ref } from '@firebase/database';\r\nimport { database } from '../FIrebaseUtility/Firebase';\r\n\r\nimport { useContext } from 'react';\r\nimport { StoreContex } from '../../store/StoreProvider';\r\n\r\nimport { useEffect } from 'react';\r\n\r\nimport { resultType } from '../../Types/Types';\r\n\r\nconst Header = () => {\r\n\r\n\r\n\r\n    const { user, setUser, setList, setInfoShow } = useContext(StoreContex)\r\n\r\n    const provider = new GoogleAuthProvider();  //google authentication\r\n    const auth = getAuth();\r\n    auth.languageCode = 'pl';\r\n\r\n    let userUid = '';\r\n\r\n    const handleSignIn = () => {  //sing in app\r\n        setInfoShow(false)\r\n        signInWithPopup(auth, provider).then((result: resultType) => {\r\n            setUser(result.user);\r\n        }).catch((error) => {\r\n            console.warn(error)\r\n        });\r\n    }\r\n\r\n    const handleSignOut = () => {  //sing out app\r\n        signOut(auth).then((result: void) => {\r\n            setUser()\r\n        }).catch((error) => {\r\n            console.warn(error)\r\n        })\r\n    }\r\n\r\n    useEffect(() => { //get a list of expenses from database\r\n        const listOfExpenses = ref(database, `/${userUid}`)\r\n        onValue(listOfExpenses, (snapshot) => { setList(snapshot.val()) })\r\n    }, [userUid, setList])\r\n\r\n    return (\r\n        <header className='header'>\r\n            <div className='logo'>\r\n                {/* LOGO */}\r\n            </div>\r\n            {/* <h1 className=\"title\">Lista wydatków na samochód</h1> */}\r\n            <h1 className=\"title\">Car expenses list</h1>\r\n            <button className='loginBtn' onClick={Boolean(user) === true ? handleSignOut : handleSignIn}>{Boolean(user) === true ? `Sign Out` : `Sign in Google`}</button>\r\n            <button className='loginBtn2' onClick={Boolean(user) === true ? handleSignOut : handleSignIn}></button>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import { useContext } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { StoreContex } from '../../store/StoreProvider';\r\n\r\nimport '../Navigation/Navigation.scss'\r\n\r\nconst Navigation = () => {\r\n    const { user } = useContext(StoreContex)\r\n    return (\r\n        <menu className='menu'>\r\n            <nav className='nav'>\r\n                <ul>  <li className=\"list\">\r\n                    <Link className='link' to=\"/\">Home</Link>\r\n                    {/* <Link className='link' to=\"/\">Strona główna</Link> */}\r\n                </li>\r\n                    {Boolean(user) === true ? <li className=\"list\">\r\n                        <Link className='link' to=\"/expenses\">Expenses</Link>\r\n                        {/* <Link className='link' to=\"/expenses\">Wdatki</Link> */}\r\n                    </li> : null}\r\n                </ul>  </nav>\r\n        </menu>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import { nanoid } from 'nanoid';\r\n\r\nimport { ref, set } from \"firebase/database\"\r\n\r\nimport { database } from '../FIrebaseUtility/Firebase';\r\n\r\nimport \"./ContentForm.scss\"\r\n\r\nimport { useState } from 'react';\r\nimport { useContext } from 'react';\r\nimport { StoreContex } from '../../store/StoreProvider';\r\n\r\nconst ContentForm = () => {\r\n\r\n    const { user, infoShow, setInfoShow } = useContext(StoreContex)\r\n\r\n    const [price, setPrice] = useState<number>(Number(''));\r\n    const [productName, setProductName] = useState<string>('');\r\n    const [buyDate, setBuyDate] = useState<string>('');\r\n    const [carBrand, setCarBrand] = useState<string>('');\r\n\r\n    const id = nanoid() //randomize id \r\n\r\n    const sendData = (price: number, productName: string, buyDate: string, carBrand: string) => { //send data to database \r\n\r\n        set(ref(database, `/${user?.uid}/${id}`), {\r\n            id,\r\n            price: Number(price),\r\n            productName: productName,\r\n            date: buyDate,\r\n            carBrand,\r\n            createDate: new Date().toUTCString()\r\n        });\r\n    }\r\n\r\n\r\n    //add price do the state\r\n    const handlePrice = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setPrice(Number(event?.target.value))\r\n    }\r\n\r\n    //add name  do the state\r\n    const handleProductName = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setProductName(String(event?.target.value))\r\n    }\r\n\r\n    //add date do the state\r\n    const handleBuyDate = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setBuyDate(String(event?.target.value))\r\n    }\r\n\r\n    //add car model do the state\r\n    const handleCarModel = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n        setCarBrand(String(event.target.value))\r\n    }\r\n\r\n    //reset all input \r\n    const resetFormValues = () => {\r\n        setPrice(Number(''));\r\n        setProductName('');\r\n        setBuyDate('')\r\n        setCarBrand('')\r\n    }\r\n\r\n    //submit form \r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n\r\n        (Boolean(user) === true ? sendData(price, productName, buyDate, carBrand) : setInfoShow(true))\r\n        resetFormValues()\r\n    }\r\n\r\n    const handleReset = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        e.preventDefault()\r\n        resetFormValues()\r\n        console.log('reset')\r\n    }\r\n\r\n    return (\r\n        <section className='divForm'>\r\n            {infoShow === true ? <p className='infoShowText'>You must sign in to add your expenses!</p> : null}\r\n            <form className='form' method='post' onSubmit={handleSubmit}>\r\n                <label className='label label1'>\r\n                    Price:\r\n                    {/* Cena: */}\r\n                    <input onChange={handlePrice} type=\"number\" value={price === 0 ? \"\" : price} /*placeholder=\"cena za rzeczy... np: 50 zł\"*/ placeholder=\"Price for item... E.g. $50\" required />\r\n                </label>\r\n                <label className='label label2'>\r\n                    Item:\r\n                    {/* Rzecz: */}\r\n                    <input onChange={handleProductName} type=\"text\" value={productName} /*placeholder=\"Zakupy... np: Paliwo\"*/ placeholder='Purchased item... E.g. Fuel' required />\r\n                </label>\r\n                <label className='label label3'>\r\n                    Date:\r\n                    <input onChange={handleBuyDate} type=\"date\" value={buyDate} lang=\"en\" required />\r\n                </label>\r\n                <label className='label label4' >\r\n                    Car Brand:\r\n                    <select onChange={handleCarModel} name=\"auto\" id=\"auto\" value={carBrand} required={carBrand === 'none' ? true : false}>\r\n                        <option value='none'  > - Choose -</option>\r\n                        <option value=\"ford\">Ford</option>\r\n                        <option value=\"hyundai\">Hyundai</option>\r\n                        <option value=\"volkswagen\">Volkswagen</option>\r\n                    </select>\r\n                </label>\r\n                <button type='submit' className='submitBtn' >Save</button>\r\n                {/* <button type='submit' className='submitBtn' >Zapisz</button> */}\r\n                <button onClick={handleReset} className='btn' type='button'>Cancel</button>\r\n                {/* <button onClick={handleReset} className='btn' type='button'>Anuluj</button> */}\r\n            </form>\r\n\r\n        </section>\r\n\r\n    )\r\n}\r\n\r\nexport default ContentForm","import React, { useEffect, useRef } from \"react\";\r\n\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport './Modal.scss'\r\n\r\nconst Modal = ({ children, isOpen, handleOnClose, shouldBeCloseOnOutsideClick }: {\r\n  children: any;\r\n  isOpen: boolean;\r\n  handleOnClose: any;\r\n  shouldBeCloseOnOutsideClick: boolean;\r\n}) => {\r\n\r\n  const modalRef = useRef<any>(null)\r\n  const previousActiveElement = useRef<any>(null);\r\n\r\n  useEffect(() => {\r\n    if (!modalRef.current) {\r\n      return;\r\n    }\r\n\r\n    const { current: modal } = modalRef; //destructurization modalRef\r\n\r\n    if (isOpen) {  //open modal \r\n      previousActiveElement.current = document.activeElement;\r\n      modal.showModal();\r\n    } else if (previousActiveElement.current) { //close modal\r\n      modal.close();\r\n      previousActiveElement.current.focus();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  useEffect(() => {\r\n    const { current: modal } = modalRef;\r\n\r\n    const handleCancel = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n      e.preventDefault();\r\n      handleOnClose();\r\n    };\r\n\r\n    modal.addEventListener(\"cancel\", handleCancel);\r\n    return () => {\r\n      modal.removeEventListener(\"cancel\", handleCancel);\r\n    }\r\n  }, [handleOnClose]);\r\n\r\n  const handleOutsideClick = ({ target }: any) => { //function to close modal on outside click\r\n    const { current } = modalRef;\r\n\r\n    if (shouldBeCloseOnOutsideClick && target === current) {\r\n      handleOnClose();\r\n    }\r\n  };\r\n\r\n  return ReactDOM.createPortal(( // portal for modal\r\n    <dialog className='modal' ref={modalRef} onClick={handleOutsideClick}>\r\n      {children}\r\n    </dialog>\r\n  ), document.body\r\n  );\r\n};\r\n\r\nexport default Modal;","import * as React from 'react';\r\nimport { useState } from 'react';\r\n\r\nimport Modal from '../../../Modal/Modal';\r\n\r\nimport { ref, set } from '@firebase/database';\r\nimport { database } from '../../../FIrebaseUtility/Firebase';\r\n\r\nimport './EditMode.scss'\r\nimport { useContext } from 'react';\r\nimport { StoreContex } from '../../../../store/StoreProvider';\r\n\r\nconst EditMode = ({ isOpenPopup, hidePopup, id, priceFromExpensesList, dateFromExpensesList, carBrandFromExpensesList, productNameFromExpensesList, createDateFromExpensesList }: {\r\n    isOpenPopup: boolean;\r\n    hidePopup: any;\r\n    id: string;\r\n    priceFromExpensesList: number;\r\n    dateFromExpensesList: string;\r\n    carBrandFromExpensesList: string;\r\n    productNameFromExpensesList: string;\r\n    createDateFromExpensesList: string;\r\n}) => {\r\n\r\n    const { list, user } = useContext(StoreContex)\r\n\r\n    const keyObjectArrayInEditMode: string[] = []\r\n    for (const property in list[`${user.uid}`]) {\r\n        keyObjectArrayInEditMode.push(property)\r\n    }\r\n\r\n    //state\r\n    const [price, setPrice] = useState<number>(Number(priceFromExpensesList));\r\n    const [productName, setProductName] = useState<string>(productNameFromExpensesList);\r\n    const [buyDate, setBuyDate] = useState<string>(dateFromExpensesList);\r\n    const [carBrand, setCarBrand] = useState<string>(carBrandFromExpensesList);\r\n    const [showText, setShowText] = useState<boolean>(false);\r\n\r\n    // add price to edit mode\r\n    const handlePrice = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setPrice(Number(event?.target.value))\r\n    }\r\n    // add product name to edit mode \r\n    const handleProductName = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setProductName(String(event?.target.value))\r\n    }\r\n    // add date to edit mode \r\n    const handleBuyDate = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setBuyDate(String(event?.target.value))\r\n    }\r\n    // add car model to edit mode \r\n    const handleCarModel = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n        setCarBrand(String(event.target.value))\r\n    }\r\n\r\n    // submit edit form\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n\r\n        if (price === 0 && productName === '' && buyDate === '' && carBrand === '') {\r\n            setShowText(true)\r\n        } else {\r\n            hidePopup()\r\n            setShowText(false)\r\n\r\n            keyObjectArrayInEditMode.map((key: any) => {\r\n\r\n                //send edit data to database\r\n                if (list[`${user.uid}`][`${key}`].id === id) {\r\n                    set(ref(database, `/${user.uid}/${id}`), {\r\n                        price: Number(price),\r\n                        productName,\r\n                        createDate: createDateFromExpensesList,\r\n                        date: buyDate,\r\n                        id,\r\n                        carBrand,\r\n                        editDate: new Date().toUTCString()\r\n                    });\r\n                }\r\n                return (null)\r\n            })\r\n        }\r\n        e.preventDefault()\r\n    }\r\n    const handleCancle = (e: React.MouseEvent<HTMLButtonElement>) => { // cancel editing\r\n        e.preventDefault();\r\n        setShowText(false)\r\n        hidePopup()\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={isOpenPopup} handleOnClose={hidePopup} shouldBeCloseOnOutsideClick={false}>\r\n            <div className=\"divEdit\">\r\n                {showText === true ? <p className=\"warningText\" >You can't save without changing any value</p> : null}\r\n                {/* {showText === true ? <p className=\"warningText\" >nie możesz zapisać nie zmieniając żadnej wartości</p> : null} */}\r\n                <form className='formEdit' method='post' onSubmit={handleSubmit} >\r\n                    <label className='label'>\r\n                        Price:\r\n                        <input onChange={handlePrice} type=\"number\" value={price === 0 ? \"\" : price} placeholder=\"Price for item... E.g. $50\" required />\r\n                    </label>\r\n                    <label className='label'>\r\n                        Item:\r\n                        <input onChange={handleProductName} type=\"text\" value={productName} placeholder='Purchased item... E.g. Fuel' required />\r\n                    </label>\r\n                    <label className='label'>\r\n                        Date:\r\n                        <input onChange={handleBuyDate} type=\"date\" value={buyDate} lang=\"en\" required />\r\n                    </label>\r\n                    <label className='label' >\r\n                        Car Brand:\r\n                        <select onChange={handleCarModel} /*name=\"auto\" id=\"auto\"*/ value={carBrand} required={carBrand === 'none' ? true : false}>\r\n                            <option value='none' > - Choose -</option>\r\n                            <option value=\"ford\">Ford</option>\r\n                            <option value=\"hyundai\">Hyundai</option>\r\n                            <option value=\"volkswagen\">Volkswagen</option>\r\n                        </select>\r\n                    </label>\r\n                    <button className=\"btnSubmit\" type='submit'>Save</button>\r\n                    <button onClick={handleCancle} className=\"btnCancel\" type='button'>Cancel</button>\r\n                </form>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EditMode;","import { useContext, useState } from 'react';\r\n\r\nimport { StoreContex } from '../../../../store/StoreProvider';\r\n\r\nimport { ref, remove } from '@firebase/database';\r\nimport { database } from '../../../FIrebaseUtility/Firebase';\r\n\r\nimport './ExpenseList.scss'\r\n\r\nimport EditMode from '../EditMode/EditMode';\r\n\r\nconst ExpenseList = ({ date = \"2021-07-01\", productName = \"Akumulator\", price = 50, carBrand = \"Ford\", id, createDate }: {\r\n    date?: string;\r\n    productName?: string;\r\n    price?: number;\r\n    carBrand?: string;\r\n    id: string;\r\n    createDate: string;\r\n}) => {\r\n\r\n    const [isOpenPopup, setIsOpenPopup] = useState(false)\r\n\r\n    const { list, user } = useContext(StoreContex)\r\n\r\n    const keyObjectArrayInExpenses: string[] = []\r\n    for (const property in list[`${user.uid}`]) { // get id from object \r\n        keyObjectArrayInExpenses.push(property)\r\n    }\r\n\r\n    const handleDelete = () => { //delete one part of list \r\n\r\n        keyObjectArrayInExpenses.map((key: string) => {\r\n\r\n            if (list[`${user.uid}`][`${key}`].id === id) {\r\n                const deleteToDoObject = ref(database, `/${user.uid}/${id}`);\r\n                remove(deleteToDoObject)\r\n            }\r\n\r\n            return (null)\r\n\r\n        }\r\n        )\r\n    }\r\n\r\n    const hidePopup = (event: any) => {\r\n        if (event) {\r\n            event.preventDefault()\r\n        }\r\n\r\n        setIsOpenPopup(false);\r\n    }\r\n\r\n\r\n    const handleEdit = () => { //editMode on\r\n        setIsOpenPopup(true)\r\n    }\r\n\r\n    // edit mode with drop down menu or with popup window\r\n\r\n\r\n    return (\r\n        <li className=\"liList\">\r\n            <article className=\"expenseList\">\r\n                <h3>{`Car maintenance purchases`}</h3>\r\n                {/* <h3>{`Zakupy dotyczące utrzymania samochodu`}</h3> */}\r\n                <p>{`Purchased item: ${productName}`}</p>\r\n                {/* <p>{`Zakupiony produkt: ${productName}`}</p> */}\r\n                <p>{`For the car: ${carBrand}`}</p>\r\n                {/* <p>{`Przeznaczony do samochodu: ${carBrand}`}</p> */}\r\n                <p>{`Cost: $${price}`}</p>\r\n                {/* <p>{`Kwota zakupu: ${price}zł`}</p> */}\r\n                <p>{`Purchased on: ${date}`}</p>\r\n                {/* <p>{`Zakupiony w dniu: ${date}`}</p> */}\r\n                <button onClick={handleDelete} className='btn'>Delete</button>\r\n                {/* <button onClick={handleDelete} className='btn'>usuń</button> */}\r\n                <button onClick={handleEdit} className='btn'>Edit</button>\r\n                {/* <button onClick={handleEdit} className='btn'>edytuj</button> */}\r\n                <EditMode key={id} id={id} isOpenPopup={isOpenPopup} hidePopup={hidePopup} priceFromExpensesList={price} dateFromExpensesList={date} carBrandFromExpensesList={carBrand} productNameFromExpensesList={productName} createDateFromExpensesList={createDate} />\r\n            </article>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ExpenseList;","import React, { useContext, useState } from 'react';\r\nimport { StoreContex } from '../../store/StoreProvider';\r\n\r\nimport ExpenseList from './subcomponent/ExpenseList/ExpenseList';\r\n\r\nimport './Expenses.scss'\r\n\r\nconst Expenses = () => {\r\n    const [sort, setSort] = useState<string>()\r\n    const { list, user } = useContext(StoreContex)\r\n\r\n    const keyObjectArrayEntires: any = (Boolean(list[`${user.uid}`]) && Object.entries(list[`${user.uid}`])); // get id from object \r\n\r\n    const sortedArray: any = []\r\n    Boolean(list[`${user.uid}`]) && keyObjectArrayEntires.forEach((element: any) => { //sort function \r\n        sort !== \"productName\" ? sortedArray.push([element[1][`${sort}`], element[1].id]) : sortedArray.push([String(element[1].productName).toLowerCase(), element[1].id]);\r\n    })\r\n\r\n    // add to expenseListElement props\r\n    const expenseListElement = sortedArray.sort().sort((a: any, b: any) => a[0] - b[0]).map((el: any) => (<ExpenseList key={list[`${user.uid}`][`${el[1]}`].id} id={list[`${user.uid}`][`${el[1]}`].id} date={list[`${user.uid}`][`${el[1]}`].date} carBrand={list[`${user.uid}`][`${el[1]}`].carBrand} price={Number(list[`${user.uid}`][`${el[1]}`].price)} productName={list[`${user.uid}`][`${el[1]}`].productName} createDate={list[`${user.uid}`][`${el[1]}`].createDate} />))\r\n\r\n    const calculatedExpenses = () => { // calculated price from all of list\r\n        let spendMoney: number = 0;\r\n        sortedArray.sort((a: any, b: any) => a[0] - b[0]).forEach((el: string) => (spendMoney += Number(list[`${user.uid}`][`${el[1]}`].price)));\r\n\r\n        return (spendMoney.toFixed(2))\r\n    }\r\n\r\n    const handleSort = (e: React.ChangeEvent<HTMLSelectElement>) => { //sort\r\n        setSort(String(e.target.value))\r\n    }\r\n\r\n    return (\r\n        <section className='sectionExpenses'>\r\n            <ul className='ulExpenses'>\r\n                {Boolean(list[`${user.uid}`]) ? expenseListElement : <p className='nonExpenses'>You didn't even spend a buck</p>}\r\n                {/* {Boolean(list[`${user.uid}`]) ? expenseListElement : <p className='nonExpenses'>nie wydałeś nawet złotówki</p>} */}\r\n            </ul>\r\n            <div className='expensesCalculating'>{`Total expenses $${calculatedExpenses()}`}\r\n                {/* <div className='expensesCalculating'>{`Łączne wydatki ${calculatedExpenses()} zł.`} */}\r\n                <label className='sort' > Sort:\r\n                    {/* <label className='sort' > Sortuj po: */}\r\n                    <select className='sortSelect' onChange={handleSort} /*name=\"auto\" id=\"auto\"*/ value={sort}>\r\n                        <option value=\"-\" disabled={sort !== undefined ? true : false}>-Choose-</option>\r\n                        {/* <option value=\"-\" disabled={sort !== undefined ? true : false}>-Wybierz-</option> */}\r\n                        <option value=\"price\">Price</option>\r\n                        <option value=\"carBrand\">Car brand</option>\r\n                        <option value=\"date\">Date</option>\r\n                        <option value=\"productName\">Item</option>\r\n                    </select>\r\n                </label>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Expenses;","import { useContext } from 'react';\r\n\r\nimport { Switch, Route, Redirect } from 'react-router';\r\n\r\nimport { StoreContex } from '../../store/StoreProvider';\r\n\r\nimport ContentForm from '../contentForm/ContentForm';\r\nimport Expenses from '../expenses/Expenses';\r\n\r\nimport './Content.scss'\r\n\r\nconst Content = () => {\r\n\r\n    const { user } = useContext(StoreContex)\r\n\r\n    return (\r\n        // render content\r\n        <main className=\"main\">\r\n            <Switch>\r\n                <Route exact path=\"/\" render={() => <ContentForm />} />\r\n                {Boolean(user) === false ? <Redirect from=\"/expenses\" to='/' /> : <Route exact path=\"/expenses\" render={() => <Expenses />} />}\r\n                {/* <Route exact path=\"/expenses\" render={() => <Expenses />} /> */}\r\n\r\n            </Switch>\r\n        </main>\r\n    )\r\n}\r\nexport default Content","import { HashRouter as Router } from 'react-router-dom';\n\nimport './App.scss'\n\nimport Header from './components/Header/Header';\nimport Navigation from './components/Navigation/Navigation';\nimport Content from './components/content/Content';\n\nimport StoreProvider from './store/StoreProvider';\n\n\nconst App = () => (\n    <StoreProvider>\n        <Header />\n        <Router>\n            <div className=\"content\">\n                <Navigation />\n                <Content />\n            </div>\n        </Router>\n    </StoreProvider>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}