{"version":3,"sources":["components/FIrebaseUtility/Firebase.ts","store/StoreProvider.tsx","components/Header/Header.tsx","components/Navigation/Navigation.tsx","components/contentForm/ContentForm.tsx","components/Modal/Modal.tsx","components/expenses/subcomponent/EditMode/EditMode.tsx","components/expenses/subcomponent/ExpenseList/ExpenseList.tsx","components/expenses/Expenses.tsx","components/content/Content.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["process","firebaseConfig","apiKey","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATABASE_URL","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","database","initializeApp","getDatabase","StoreContex","createContext","StoreProvider","children","useState","list","setList","user","setUser","infoShow","setInfoShow","Provider","value","Header","useContext","provider","GoogleAuthProvider","auth","getAuth","languageCode","console","log","useEffect","listOfExpenses","ref","onValue","snapshot","val","className","onClick","Boolean","signOut","then","result","catch","error","warn","signInWithPopup","Navigation","to","ContentForm","Number","price","setPrice","productName","setProductName","buyDate","setBuyDate","carBrand","setCarBrand","id","nanoid","resetFormValues","method","onSubmit","e","preventDefault","set","uid","date","createDate","Date","toUTCString","sendData","onChange","event","target","type","placeholder","required","name","Modal","isOpen","handleOnClose","shouldBeCloseOnOutsideClick","modalRef","useRef","previousActiveElement","current","modal","document","activeElement","showModal","close","focus","handleCancel","addEventListener","removeEventListener","ReactDOM","createPortal","body","EditMode","isOpenPopup","hidePopup","priceFromExpensesList","dateFromExpensesList","carBrandFromExpensesList","productNameFromExpensesList","createDateFromExpensesList","keyObjectArrayInEditMode","property","push","showText","setShowText","map","key","editDate","ExpenseList","setIsOpenPopup","keyObjectArrayInExpenses","deleteToDoObject","remove","Expenses","sort","setSort","keyObjectArrayEntires","Object","entries","sortedArray","forEach","element","String","toLowerCase","expenseListElement","a","b","el","spendMoney","calculatedExpenses","disabled","undefined","Content","exact","path","render","from","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6aa6d8ce.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\"\r\nimport { getDatabase } from \"firebase/database\"\r\n\r\nconst { REACT_APP_API_KEY, REACT_APP_AUTH_DOMAIN, REACT_APP_DATABASE_URL, REACT_APP_PROJECT_ID, REACT_APP_STORAGE_BUCKET, REACT_APP_MESSAGING_SENDER_ID, REACT_APP_APP_ID } = process.env\r\n\r\nconst firebaseConfig = {\r\n  apiKey: REACT_APP_API_KEY,\r\n  authDomain: REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: REACT_APP_DATABASE_URL,\r\n  projectId: REACT_APP_PROJECT_ID,\r\n  storageBucket: REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: REACT_APP_APP_ID\r\n};\r\n\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\nexport const database = getDatabase();\r\nexport default firebaseApp;","import { useState, createContext } from 'react';\r\n\r\nexport const StoreContex = createContext<null | any>(null)\r\n\r\nconst StoreProvider = ({ children }: any) => {\r\n\r\n\r\n    const [list, setList] = useState<string>()\r\n    const [user, setUser] = useState<object>()\r\n    const [infoShow, setInfoShow] = useState<boolean>(false);\r\n\r\n    return (\r\n        <StoreContex.Provider value={{ list, setList, user, setUser, infoShow, setInfoShow }}>\r\n            {children}\r\n        </StoreContex.Provider>\r\n    )\r\n}\r\n\r\nexport default StoreProvider;","import './Header.scss'\r\n\r\nimport { GoogleAuthProvider, getAuth, signInWithPopup, signOut } from 'firebase/auth';\r\n\r\nimport { onValue, ref } from '@firebase/database';\r\nimport { database } from '../FIrebaseUtility/Firebase';\r\n\r\nimport { useContext } from 'react';\r\nimport { StoreContex } from '../../store/StoreProvider';\r\n\r\nimport { useEffect } from 'react';\r\n\r\nconst Header = () => {\r\n\r\n    const { user, setUser, list, setList, setInfoShow } = useContext(StoreContex)\r\n\r\n    const provider = new GoogleAuthProvider();  //google authentication\r\n    const auth = getAuth();\r\n    auth.languageCode = 'pl';\r\n\r\n    let userUid = '';\r\n\r\n    const handleSingIn = () => {  //sing in app\r\n        setInfoShow(false)\r\n        signInWithPopup(auth, provider).then((result: any) => {\r\n            console.log(`Zalogowano`);\r\n            setUser(result.user);\r\n            // userUid = result.user.uid;\r\n        }).catch((error) => {\r\n            console.warn(error)\r\n        });\r\n    }\r\n\r\n    console.log(userUid)\r\n\r\n    const handleSingOut = () => {  //sing out app\r\n        signOut(auth).then((result: any) => {\r\n            console.log(`Wylogowano`)\r\n            setUser()\r\n        }).catch((error) => {\r\n            console.warn(error)\r\n        })\r\n    }\r\n\r\n    useEffect(() => { //get a list of expenses from database\r\n        console.log(userUid)\r\n        const listOfExpenses = ref(database, `/${userUid}`)\r\n        onValue(listOfExpenses, (snapshot) => { setList(snapshot.val()) })\r\n    }, [userUid, setList])\r\n\r\n    console.log(list)\r\n\r\n    return (\r\n        <div>\r\n            <header className='header'>\r\n                <div className='logo'>\r\n                    LOGO\r\n                </div>\r\n                <h1 className=\"title\">Lista wydatków na samochód</h1>\r\n                <button onClick={Boolean(user) === true ? handleSingOut : handleSingIn}>{Boolean(user) === true ? `Wyloguj` : `Zaloguj za pomocą Google`}</button>\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { useContext } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { StoreContex } from '../../store/StoreProvider';\r\n\r\nimport '../Navigation/Navigation.scss'\r\n\r\nconst Navigation = () => {\r\n    const { user } = useContext(StoreContex)\r\n    return (\r\n        <menu className='menu'>\r\n            <nav className='nav'>\r\n                <ul>  <li className=\"list\">\r\n                    <Link className='link' to=\"/\">Strona główna</Link>\r\n                </li>\r\n                    {Boolean(user) === true ? <li className=\"list\">\r\n                        <Link className='link' to=\"/expenses\">Wdatki</Link>\r\n                    </li> : null}\r\n                </ul>  </nav>\r\n        </menu>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import { nanoid } from 'nanoid';\r\n\r\nimport { ref, set } from \"firebase/database\"\r\n\r\nimport { database } from '../FIrebaseUtility/Firebase';\r\n\r\nimport \"./ContentForm.scss\"\r\nimport { useState } from 'react';\r\nimport { useContext } from 'react';\r\nimport { StoreContex } from '../../store/StoreProvider';\r\n\r\nconst ContentForm = () => {\r\n\r\n    const { user, infoShow, setInfoShow } = useContext(StoreContex)\r\n\r\n    const [price, setPrice] = useState<number>(Number(''));\r\n    const [productName, setProductName] = useState<string>('');\r\n    const [buyDate, setBuyDate] = useState<string>('');\r\n    const [carBrand, setCarBrand] = useState<string>('');\r\n\r\n    const id = nanoid() //randomize id \r\n\r\n    const sendData = (price: number, productName: string, buyDate: string, carBrand: string) => { //send data to database \r\n\r\n        set(ref(database, `/${user?.uid}/${id}`), {\r\n            id,\r\n            price: Number(price),\r\n            productName: productName,\r\n            date: buyDate,\r\n            carBrand,\r\n            createDate: new Date().toUTCString()\r\n        });\r\n    }\r\n\r\n\r\n    const handlePrice = (event: any) => { //add price do the state\r\n        setPrice(event?.target.value)\r\n    }\r\n\r\n    const handleProductName = (event: any) => { //add name  do the state\r\n        setProductName(event?.target.value)\r\n    }\r\n    const handleBuyDate = (event: any) => {//add date do the state\r\n        setBuyDate(event?.target.value)\r\n    }\r\n    const handleCarModel = (event: any) => {//add car model do the state\r\n        setCarBrand(event.target.value)\r\n    }\r\n\r\n    const resetFormValues = () => { //reset all input \r\n        setPrice(Number(''));\r\n        setProductName('');\r\n        setBuyDate('')\r\n        setCarBrand('')\r\n    }\r\n\r\n    const handleSubmit = (e: any) => { //submit form \r\n        e.preventDefault();\r\n\r\n        (Boolean(user) === true ? sendData(price, productName, buyDate, carBrand) : setInfoShow(true))\r\n        resetFormValues()\r\n    }\r\n\r\n    const handleReset = (e: any) => {\r\n        e.preventDefault()\r\n        resetFormValues()\r\n        console.log('reset')\r\n    }\r\n\r\n    return (\r\n        <section className='divForm'>\r\n            {infoShow === true ? <p className='infoShowText'>Musisz się zaogować aby dodać swój wydatek!</p> : null}\r\n            <form className='form' method='post' onSubmit={handleSubmit}>\r\n                <label className='label label1'>\r\n                    Cena:\r\n                    <input onChange={handlePrice} type=\"number\" value={price === 0 ? \"\" : price} placeholder=\"cena za rzeczy... np: 50 zł\" required />\r\n                </label>\r\n                <label className='label label2'>\r\n                    Rzecz:\r\n                    <input onChange={handleProductName} type=\"text\" value={productName} placeholder=\"Zakup... np: Paliwo\" required />\r\n                </label>\r\n                <label className='label label3'>\r\n                    Data:\r\n                    <input onChange={handleBuyDate} type=\"date\" value={buyDate} required />\r\n                </label>\r\n                <label className='label label4' >\r\n                    Auto:\r\n                    <select onChange={handleCarModel} name=\"auto\" id=\"auto\" value={carBrand} required={carBrand === 'none' ? true : false}>\r\n                        <option value='none'  > - Wybierz -</option>\r\n                        <option value=\"ford\">Ford</option>\r\n                        <option value=\"hyundai\">Hyundai</option>\r\n                        <option value=\"volkswagen\">Volkswagen</option>\r\n                    </select>\r\n                </label>\r\n                <button type='submit' className='submitBtn' >Zapisz</button>\r\n                <button onClick={handleReset} className='btn' type='button'>Anuluj</button>\r\n            </form>\r\n\r\n        </section>\r\n\r\n    )\r\n}\r\n\r\nexport default ContentForm","import React, { useEffect, useRef } from \"react\";\r\n\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport './Modal.scss'\r\n\r\nconst Modal = ({ children, isOpen, handleOnClose, shouldBeCloseOnOutsideClick }: any) => {\r\n\r\n  const modalRef = useRef<any>(null)\r\n  const previousActiveElement = useRef<any>(null);\r\n\r\n  useEffect(() => {\r\n    if (!modalRef.current) {\r\n      return;\r\n    }\r\n\r\n    const { current: modal } = modalRef; //destructurization modalRef\r\n\r\n    if (isOpen) {  //open modal \r\n      previousActiveElement.current = document.activeElement;\r\n      modal.showModal();\r\n    } else if (previousActiveElement.current) { //close modal\r\n      modal.close();\r\n      previousActiveElement.current.focus();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  useEffect(() => {\r\n    const { current: modal } = modalRef;\r\n\r\n    const handleCancel = (e: any) => {\r\n      e.preventDefault();\r\n      handleOnClose();\r\n    };\r\n\r\n    modal.addEventListener(\"cancel\", handleCancel);\r\n    return () => {\r\n      modal.removeEventListener(\"cancel\", handleCancel);\r\n    }\r\n  }, [handleOnClose]);\r\n\r\n  const handleOutsideClick = ({ target }: any) => { //function to close modal on outside click\r\n    const { current } = modalRef;\r\n\r\n    if (shouldBeCloseOnOutsideClick && target === current) {\r\n      handleOnClose();\r\n    }\r\n  };\r\n\r\n  return ReactDOM.createPortal(( // portal for modal\r\n    <dialog className='modal' ref={modalRef} onClick={handleOutsideClick}>\r\n      {children}\r\n    </dialog>\r\n  ), document.body\r\n  );\r\n};\r\n\r\nexport default Modal;","import * as React from 'react';\r\nimport { useState } from 'react';\r\n\r\nimport Modal from '../../../Modal/Modal';\r\n\r\nimport { ref, set } from '@firebase/database';\r\nimport { database } from '../../../FIrebaseUtility/Firebase';\r\n\r\nimport './EditMode.scss'\r\nimport { useContext } from 'react';\r\nimport { StoreContex } from '../../../../store/StoreProvider';\r\n\r\nconst EditMode = ({ isOpenPopup, hidePopup, id, priceFromExpensesList, dateFromExpensesList, carBrandFromExpensesList, productNameFromExpensesList, createDateFromExpensesList }: any) => {\r\n\r\n    const { list, user } = useContext(StoreContex)\r\n\r\n    const keyObjectArrayInEditMode: string[] = []\r\n    for (const property in list[`${user.uid}`]) {\r\n        keyObjectArrayInEditMode.push(property)\r\n    }\r\n\r\n    //state\r\n    const [price, setPrice] = useState<number>(Number(priceFromExpensesList));\r\n    const [productName, setProductName] = useState<string>(productNameFromExpensesList);\r\n    const [buyDate, setBuyDate] = useState<string>(dateFromExpensesList);\r\n    const [carBrand, setCarBrand] = useState<string>(carBrandFromExpensesList);\r\n    const [showText, setShowText] = useState<boolean>(false);\r\n\r\n    const handlePrice = (event: any) => { // add price to edit mode \r\n        setPrice(event?.target.value)\r\n    }\r\n    const handleProductName = (event: any) => {// add product name to edit mode \r\n        setProductName(event?.target.value)\r\n    }\r\n    const handleBuyDate = (event: any) => {// add date to edit mode \r\n        setBuyDate(event?.target.value)\r\n    }\r\n    const handleCarModel = (event: any) => {// add car model to edit mode \r\n        setCarBrand(event?.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e: any) => { // submit edit form \r\n\r\n        if (price === 0 && productName === '' && buyDate === '' && carBrand === '') {\r\n            setShowText(true)\r\n        } else {\r\n            hidePopup()\r\n            setShowText(false)\r\n\r\n            keyObjectArrayInEditMode.map((key: any) => {\r\n\r\n                if (list[`${user.uid}`][`${key}`].id === id) { //send edit data to database\r\n                    set(ref(database, `/${user.uid}/${id}`), {\r\n                        price: Number(price),\r\n                        productName,\r\n                        createDate: createDateFromExpensesList,\r\n                        date: buyDate,\r\n                        id,\r\n                        carBrand,\r\n                        editDate: new Date().toUTCString()\r\n                    });\r\n                }\r\n\r\n                return (null)\r\n\r\n\r\n            })\r\n\r\n        }\r\n\r\n\r\n        e.preventDefault()\r\n\r\n    }\r\n    const handleCancle = (e: any) => { // cancel editing\r\n        e.preventDefault();\r\n        setShowText(false)\r\n        hidePopup()\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal isOpen={isOpenPopup} handleOnClose={hidePopup} shouldBeCloseOnOutsideClick={false}>\r\n            <div className=\"divEdit\">\r\n                {showText === true ? <p className=\"warningText\" >nie możesz zapisać nie zmieniając żadnej wartości</p> : null}\r\n                <form className='formEdit' method='post' onSubmit={handleSubmit} >\r\n                    <label className='label'>\r\n                        Cena:\r\n                        <input onChange={handlePrice} type=\"number\" value={price === 0 ? \"\" : price} placeholder=\"cena za rzeczy... np: 50 zł\" />\r\n                    </label>\r\n                    <label className='label'>\r\n                        Rzecz:\r\n                        <input onChange={handleProductName} type=\"text\" value={productName} placeholder=\"Zakup... np: Paliwo\" />\r\n                    </label>\r\n                    <label className='label'>\r\n                        Data:\r\n                        <input onChange={handleBuyDate} type=\"date\" value={buyDate} />\r\n                    </label>\r\n                    <label className='label' >\r\n                        Auto:\r\n                        <select onChange={handleCarModel} /*name=\"auto\" id=\"auto\"*/ value={carBrand} >\r\n                            <option value='none' > - Wybierz -</option>\r\n                            <option value=\"ford\">Ford</option>\r\n                            <option value=\"hyundai\">Hyundai</option>\r\n                            <option value=\"volkswagen\">Volkswagen</option>\r\n                        </select>\r\n                    </label>\r\n                    <button className=\"btnSubmit\" type='submit'>Zapisz</button>\r\n                    <button onClick={handleCancle} className=\"btnCancel\" type='button'>Anuluj</button>\r\n                </form>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EditMode;","import * as React from 'react';\r\nimport { useContext, useState } from 'react';\r\n\r\nimport { StoreContex } from '../../../../store/StoreProvider';\r\n\r\nimport { ref, remove } from '@firebase/database';\r\nimport { database } from '../../../FIrebaseUtility/Firebase';\r\n\r\nimport './ExpenseList.scss'\r\n\r\nimport EditMode from '../EditMode/EditMode';\r\n\r\nconst ExpenseList = ({ date = \"2021-07-01\", productName = \"Akumulator\", price = 50, carBrand = \"Ford\", id, createDate }: any) => {\r\n\r\n    const [isOpenPopup, setIsOpenPopup] = useState(false)\r\n\r\n    const { list, user } = useContext(StoreContex)\r\n\r\n    const keyObjectArrayInExpenses: string[] = []\r\n    for (const property in list[`${user.uid}`]) { // get id from object \r\n        keyObjectArrayInExpenses.push(property)\r\n    }\r\n\r\n    const handleDelete = () => { //delete one part of list \r\n \r\n        keyObjectArrayInExpenses.map((key: any) => {\r\n\r\n            if (list[`${user.uid}`][`${key}`].id === id) {\r\n                const deleteToDoObject = ref(database, `/${user.uid}/${id}`);\r\n                remove(deleteToDoObject)\r\n            }\r\n\r\n            return (null)\r\n\r\n        }\r\n        )\r\n    }\r\n\r\n    const hidePopup = (event: any) => {\r\n        if (event) {\r\n            event.preventDefault()\r\n        }\r\n\r\n        setIsOpenPopup(false);\r\n    }\r\n\r\n\r\n    const handleEdit = () => { //editMode on\r\n        setIsOpenPopup(true)\r\n    }\r\n\r\n    // edit mode with drop down menu or with popup window\r\n\r\n\r\n    return (\r\n        <li className=\"liList\">\r\n            <article className=\"expenseList\">\r\n                <h3>{`Zakupy dotyczące utrzymania samochodu`}</h3>\r\n                <p>{`Zakupiony produkt: ${productName}`}</p>\r\n                <p>{`Przeznaczony do samochodu: ${carBrand}`}</p>\r\n                <p>{`Kwota zakupu: ${price}zł`}</p>\r\n                <p>{`Zakupiony w dniu: ${date}`}</p>\r\n                <button onClick={handleDelete} className='btn'>usuń</button>\r\n                <button onClick={handleEdit} className='btn'>edytuj</button>\r\n                <EditMode key={id} id={id} isOpenPopup={isOpenPopup} hidePopup={hidePopup} priceFromExpensesList={price} dateFromExpensesList={date} carBrandFromExpensesList={carBrand} productNameFromExpensesList={productName} createDateFromExpensesList={createDate} />\r\n            </article>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ExpenseList;","import React from 'react';\r\nimport { useContext } from 'react';\r\nimport { StoreContex } from '../../store/StoreProvider';\r\n\r\nimport ExpenseList from './subcomponent/ExpenseList/ExpenseList';\r\n\r\nimport './Expenses.scss'\r\nimport { useState } from 'react';\r\n\r\nconst Expenses = () => {\r\n    const [sort, setSort] = useState<string>() \r\n    const { list, user } = useContext(StoreContex)\r\n\r\n    const keyObjectArrayEntires: any = Object.entries(list[`${user.uid}`]); // get id from object \r\n\r\n    const sortedArray: any = []\r\n    keyObjectArrayEntires.forEach((element: any) => { //sort function \r\n        sort !== \"productName\" ? sortedArray.push([element[1][`${sort}`], element[1].id]) : sortedArray.push([String(element[1].productName).toLowerCase(), element[1].id]);\r\n    })\r\n\r\n    // add to expenseListElement props\r\n    const expenseListElement = sortedArray.sort().sort((a: any, b: any) => a[0] - b[0]).map( (el: any) => (<ExpenseList key={list[`${user.uid}`][`${el[1]}`].id} id={list[`${user.uid}`][`${el[1]}`].id} date={list[`${user.uid}`][`${el[1]}`].date} carBrand={list[`${user.uid}`][`${el[1]}`].carBrand} price={Number(list[`${user.uid}`][`${el[1]}`].price)} productName={list[`${user.uid}`][`${el[1]}`].productName} createDate={list[`${user.uid}`][`${el[1]}`].createDate} />))\r\n\r\n    const calculatedExpenses = () => { // calculated price from all of list\r\n        let spendMoney: number = 0;\r\n        sortedArray.sort((a: any, b: any) => a[0] - b[0]).forEach((el: string) => (spendMoney += Number(list[`${user.uid}`][`${el[1]}`].price)));\r\n\r\n        return (spendMoney)\r\n    }\r\n\r\n    const handleSort = (e: any) => { //sort\r\n        setSort(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <section className='sectionExpenses'>\r\n            <ul className='ulExpenses'>\r\n                {expenseListElement}\r\n            </ul>\r\n            <div className='expensesCalculating'>{`Łączne wydatki ${calculatedExpenses()} zł.`}\r\n                <label className='sort' > Sortuj po: \r\n                    <select className='sortSelect' onChange={handleSort} /*name=\"auto\" id=\"auto\"*/ value={sort}>\r\n                        <option value=\"-\" disabled={sort !== undefined ? true : false}>-Wybierz-</option>\r\n                        <option value=\"price\"  >Cena</option>\r\n                        <option value=\"carBrand\">smochód</option>\r\n                        <option value=\"date\">data</option>\r\n                        <option value=\"productName\">produkt</option>\r\n                    </select>\r\n                </label>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Expenses;","import * as React from 'react';\r\nimport { useContext } from 'react';\r\n\r\nimport { Switch, Route, Redirect } from 'react-router';\r\n\r\nimport { StoreContex } from '../../store/StoreProvider';\r\n\r\nimport ContentForm from '../contentForm/ContentForm';\r\nimport Expenses from '../expenses/Expenses';\r\n\r\nimport './Content.scss'\r\n\r\nconst Content = () => {\r\n\r\n    const { user } = useContext(StoreContex)\r\n\r\n    return (\r\n        // render content\r\n        <main className=\"main\">\r\n            <Switch> \r\n                <Route exact path=\"/\" render={() => <ContentForm />} />\r\n                {Boolean(user) === false ? <Redirect from=\"/expenses\" to='/' /> : <Route exact path=\"/expenses\" render={() => <Expenses />} />}\r\n                {/* <Route exact path=\"/expenses\" render={() => <Expenses />} /> */}\r\n\r\n            </Switch>\r\n        </main>\r\n    )\r\n}\r\nexport default Content","import { HashRouter as Router } from 'react-router-dom';\n\nimport './App.scss'\n\nimport Header from './components/Header/Header';\nimport Navigation from './components/Navigation/Navigation';\nimport Content from './components/content/Content';\n\nimport StoreProvider from './store/StoreProvider';\n\n\nconst App = () => (\n    <StoreProvider>\n        <Header />\n        <Router>\n            <div className=\"content\">\n                <Navigation />\n                <Content />\n            </div>\n        </Router>\n    </StoreProvider>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}